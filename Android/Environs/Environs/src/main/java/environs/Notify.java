package environs;

/* DO NOT EDIT THIS FILE - it is machine generated by j2c.jar */

/**
 * ------------------------------------------------------------------
 * Copyright (c) Chi-Tai Dang
 *
 * @author	Chi-Tai Dang
 * @version	1.0
 *
 * This file is part of the Environs framework developed at the
 * Lab for Human Centered Multimedia of the University of Augsburg.
 * http://hcm-lab.de/environs
 *
 * Environ is free software; you can redistribute it and/or modify
 * it under the terms of the Eclipse Public License v1.0.
 * A copy of the license may be obtained at:
 * http://www.eclipse.org/org/documents/epl-v10.html
 * --------------------------------------------------------------------
 */
import android.support.annotation.IntDef;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@SuppressWarnings("unused")
public class Notify { 

	/**
	 * Notify connection enumeration.
	 * */
	public static final class Connection {

		@IntDef(flag=true, value={type, MainNew, MainAck, MainFailed, MainClosed, 
				ComDatNew, ComDatAck, ComDatFailed, ComDatClosed, DataAck, DataClosed, 
				Progress, Established, EstablishedAck, Closed})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		public static final int type                    	=	Types.NOTIFY_TYPE_CONNECTION;
		public static final int MainNew                 	=	Types.NOTIFY_CONNECTION_MAIN_NEW;
		public static final int MainAck                 	=	Types.NOTIFY_CONNECTION_MAIN_ACK;
		public static final int MainFailed              	=	Types.NOTIFY_CONNECTION_MAIN_FAILED;
		public static final int MainClosed              	=	Types.NOTIFY_CONNECTION_MAIN_CLOSED;
		public static final int ComDatNew               	=	Types.NOTIFY_CONNECTION_COMDAT_NEW;
		public static final int ComDatAck               	=	Types.NOTIFY_CONNECTION_COMDAT_ACK;
		public static final int ComDatFailed            	=	Types.NOTIFY_CONNECTION_COMDAT_FAILED;
		public static final int ComDatClosed            	=	Types.NOTIFY_CONNECTION_COMDAT_CLOSED;
		public static final int DataAck                 	=	Types.NOTIFY_CONNECTION_DATA_ACK;
		public static final int DataClosed              	=	Types.NOTIFY_CONNECTION_DATA_CLOSED;
		public static final int Progress                	=	Types.NOTIFY_CONNECTION_PROGRESS;
		public static final int Established             	=	Types.NOTIFY_CONNECTION_ESTABLISHED;
		public static final int EstablishedAck          	=	Types.NOTIFY_CONNECTION_ESTABLISHED_ACK;
		public static final int Closed                  	=	Types.NOTIFY_CONNECTION_CLOSED;
	}

	/**
	 * Notify portal enumeration.
	 * */
	public static final class Portal {

		@IntDef(flag=true, value={Disposed, Zero, type, Established, EstablishedResolution, 
				Request, AskRequest, StreamIncoming, ImagesIncoming, IncomingEstablished, ProvideStreamAck, 
				ProvideImagesAck, ProviderReady, RequestFail, ProvideFail, StreamStarted, StreamPaused, 
				StreamStopped, StreamReceiverStarted, LocationChanged, SizeChanged, ContactChanged})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		public static final int Disposed                	=	Types.ENVIRONS_OBJECT_DISPOSED;
		public static final int Zero                    	=	0;
		public static final int type                    	=	Types.NOTIFY_TYPE_PORTAL;
		public static final int Established             	=	Types.NOTIFY_PORTAL_ESTABLISHED;
		public static final int EstablishedResolution   	=	Types.NOTIFY_PORTAL_ESTABLISHED_RESOLUTION;
		public static final int Request                 	=	Types.NOTIFY_PORTAL_REQUEST;
		public static final int AskRequest              	=	Types.NOTIFY_PORTAL_ASK_REQUEST;
		public static final int StreamIncoming          	=	Types.NOTIFY_PORTAL_STREAM_INCOMING;
		public static final int ImagesIncoming          	=	Types.NOTIFY_PORTAL_IMAGES_INCOMING;
		public static final int IncomingEstablished     	=	Types.NOTIFY_PORTAL_INCOMING_ESTABLISHED;
		public static final int ProvideStreamAck        	=	Types.NOTIFY_PORTAL_PROVIDE_STREAM_ACK;
		public static final int ProvideImagesAck        	=	Types.NOTIFY_PORTAL_PROVIDE_IMAGES_ACK;
		public static final int ProviderReady           	=	Types.NOTIFY_PORTAL_PROVIDER_READY;
		public static final int RequestFail             	=	Types.NOTIFY_PORTAL_REQUEST_FAIL;
		public static final int ProvideFail             	=	Types.NOTIFY_PORTAL_PROVIDE_FAIL;
		public static final int StreamStarted           	=	Types.NOTIFY_PORTAL_STREAM_STARTED;
		public static final int StreamPaused            	=	Types.NOTIFY_PORTAL_STREAM_PAUSED;
		public static final int StreamStopped           	=	Types.NOTIFY_PORTAL_STREAM_STOPPED;
		public static final int StreamReceiverStarted   	=	Types.NOTIFY_PORTAL_STREAM_RECEIVER_STARTED;
		public static final int LocationChanged         	=	Types.NOTIFY_PORTAL_LOCATION_CHANGED;
		public static final int SizeChanged             	=	Types.NOTIFY_PORTAL_SIZE_CHANGED;
		public static final int ContactChanged          	=	Types.NOTIFY_CONTACT_DIRECT_CHANGED;
	}

	/**
	 * Notify options enumeration.
	 * */
	public static final class Options {

		@IntDef(flag=true, value={type, PortalLocationChanged, PortalSizeChanged, DirectContactChanged})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		public static final int type                    	=	Types.NOTIFY_TYPE_OPTIONS;
		public static final int PortalLocationChanged   	=	Types.NOTIFY_PORTAL_LOCATION_CHANGED;
		public static final int PortalSizeChanged       	=	Types.NOTIFY_PORTAL_SIZE_CHANGED;
		public static final int DirectContactChanged    	=	Types.NOTIFY_CONTACT_DIRECT_CHANGED;
	}

	/**
	 * Notify file enumeration.
	 * */
	public static final class File {

		@IntDef(flag=true, value={type, FileProgress, SendProgress, ReceiveProgress})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		/* TEst comment */
		public static final int type                    	=	Types.NOTIFY_TYPE_FILE;
		public static final int FileProgress            	=	Types.NOTIFY_TYPE_FILE_PROGRESS;
		public static final int SendProgress            	=	Types.NOTIFY_FILE_SEND_PROGRESS;
		public static final int ReceiveProgress         	=	Types.NOTIFY_FILE_RECEIVE_PROGRESS;
	}

	/**
	 * Notify touchsource enumeration.
	 * */
	public static final class TouchSource {

		@IntDef(flag=true, value={type, Started, Stopped, NotAvailable, Failed
				})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		public static final int type                    	=	Types.NOTIFY_TOUCHSOURCE;
		public static final int Started                 	=	Types.NOTIFY_TOUCHSOURCE_STARTED;
		public static final int Stopped                 	=	Types.NOTIFY_TOUCHSOURCE_STOPPED;
		public static final int NotAvailable            	=	Types.NOTIFY_TOUCHSOURCE_NOTAVAIL;
		public static final int Failed                  	=	Types.NOTIFY_TOUCHSOURCE_FAILED;
	}

	/**
	 * Notify environs enumeration.
	 * */
	public static final class Environs {

		@IntDef(flag=true, value={type, Start, StartInProgress, StartEnablingWifi, StartStreamDecoder, 
				StartInit, InitFailed, MethodFailed, DecoderFailed, WifiFailed, StartFailed, 
				StartInitSuccess, StartSuccess, StartListenSuccess, StartListenDataSuccess, Stop, StopBegin, 
				StopInProgress, StopFailed, StopSuccess, StopReleased, Socket, SocketBindFailed, 
				SocketListenFailed, SocketFailed, Settings, SettingsChanged, Pairing, DeviceOnSurface, 
				DeviceNotOnSurface, DeviceFlagsUpdate})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		public static final int type                    	=	Types.NOTIFY_TYPE_ENVIRONS;
		public static final int Start                   	=	Types.NOTIFY_START;
		public static final int StartInProgress         	=	Types.NOTIFY_START_IN_PROGRESS;
		public static final int StartEnablingWifi       	=	Types.NOTIFY_START_ENABLING_WIFI;
		public static final int StartStreamDecoder      	=	Types.NOTIFY_START_STREAM_DECODER;
		public static final int StartInit               	=	Types.NOTIFY_START_INIT;

		public static final int InitFailed              	=	Types.NOTIFY_START_INIT_FAILED;
		public static final int MethodFailed            	=	Types.NOTIFY_START_METHOD_FAILED;
		public static final int DecoderFailed           	=	Types.NOTIFY_START_DECODER_FAILED;
		public static final int WifiFailed              	=	Types.NOTIFY_START_WIFI_FAILED;
		public static final int StartFailed             	=	Types.NOTIFY_START_FAILED;

		public static final int StartInitSuccess        	=	Types.NOTIFY_START_INIT_SUCCESS;
		public static final int StartSuccess            	=	Types.NOTIFY_START_SUCCESS;
		public static final int StartListenSuccess      	=	Types.NOTIFY_START_LISTEN_SUCCESS;
		public static final int StartListenDataSuccess  	=	Types.NOTIFY_START_LISTENDA_SUCCESS;

		public static final int Stop                    	=	Types.NOTIFY_STOP;
		public static final int StopBegin               	=	Types.NOTIFY_STOP_BEGIN;
		public static final int StopInProgress          	=	Types.NOTIFY_STOP_IN_PROGRESS;
		public static final int StopFailed              	=	Types.NOTIFY_STOP_FAILED;
		public static final int StopSuccess             	=	Types.NOTIFY_STOP_SUCCESS;
		public static final int StopReleased            	=	Types.NOTIFY_STOP_RELEASED;

		public static final int Socket                  	=	Types.NOTIFY_SOCKET;
		public static final int SocketBindFailed        	=	Types.NOTIFY_SOCKET_BIND_FAILED;
		public static final int SocketListenFailed      	=	Types.NOTIFY_SOCKET_LISTEN_FAILED;
		public static final int SocketFailed            	=	Types.NOTIFY_SOCKET_FAILED;

		public static final int Settings                	=	Types.NOTIFY_SETTINGS;
		public static final int SettingsChanged         	=	Types.NOTIFY_SETTINGS_CHANGED;

		public static final int Pairing                 	=	Types.NOTIFY_PAIRING;
		public static final int DeviceOnSurface         	=	Types.NOTIFY_DEVICE_ON_SURFACE;
		public static final int DeviceNotOnSurface      	=	Types.NOTIFY_DEVICE_NOT_ON_SURFACE;
		public static final int DeviceFlagsUpdate       	=	Types.NOTIFY_DEVICE_FLAGS_UPDATE;
	}

	/**
	 * Notify mediator enumeration.
	 * */
	public static final class Mediator {

		@IntDef(flag=true, value={type, Server, DeviceChanged, DeviceAdded, DeviceRemoved, 
				ServerConnected, ServerDisconnected, DeviceListUpdateAvailable, DeviceListChanged, MediatorChanged, ServerDeviceChanged, 
				ServerDeviceAdded, ServerDeviceRemoved, ServerSTUNTRegisterRequest, ServerPasswordFail, ServerPasswordMissing})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		public static final int type                    	=	Types.NOTIFY_MEDIATOR;
		public static final int Server                  	=	Types.NOTIFY_MEDIATOR_SERVER;
		public static final int DeviceChanged           	=	Types.NOTIFY_MEDIATOR_DEVICE_CHANGED;
		public static final int DeviceAdded             	=	Types.NOTIFY_MEDIATOR_DEVICE_ADDED;
		public static final int DeviceRemoved           	=	Types.NOTIFY_MEDIATOR_DEVICE_REMOVED;
		public static final int ServerConnected         	=	Types.NOTIFY_MEDIATOR_SERVER_CONNECTED;
		public static final int ServerDisconnected      	=	Types.NOTIFY_MEDIATOR_SERVER_DISCONNECTED;

		public static final int DeviceListUpdateAvailable          	=	Types.NOTIFY_MEDIATOR_DEVICELISTS_UPDATE_AVAILABLE;
		public static final int DeviceListChanged       	=	Types.NOTIFY_MEDIATOR_DEVICELISTS_CHANGED;

		public static final int MediatorChanged         	=	Types.NOTIFY_MEDIATOR_MED_CHANGED;

		public static final int ServerDeviceChanged     	=	Types.NOTIFY_MEDIATOR_SRV_DEVICE_CHANGED;
		public static final int ServerDeviceAdded       	=	Types.NOTIFY_MEDIATOR_SRV_DEVICE_ADDED;
		public static final int ServerDeviceRemoved     	=	Types.NOTIFY_MEDIATOR_SRV_DEVICE_REMOVED;
		public static final int ServerSTUNTRegisterRequest                    	=	Types.NOTIFY_MEDIATOR_SRV_STUNT_REG_REQ;

		public static final int ServerPasswordFail      	=	Types.NOTIFY_MEDIATOR_SERVER_PASSWORD_FAIL;
		public static final int ServerPasswordMissing   	=	Types.NOTIFY_MEDIATOR_SERVER_PASSWORD_MISSING;
	}

	/**
	 * Notify network enumeration.
	 * */
	public static final class Network {

		@IntDef(flag=true, value={type, Changed})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		public static final int type                    	=	Types.NOTIFY_NETWORK;
		public static final int Changed                 	=	Types.NOTIFY_NETWORK_CHANGED;
	}

	/**
	 * Notify tracker enumeration.
	 * */
	public static final class Tracker {

		@IntDef(flag=true, value={type, Failed, Enabled, Changed, Disabled, 
				EnableFailed, InitSensor, InitSensorFailed, Start, StartFailed, Stop
				})

		@Retention(RetentionPolicy.SOURCE)
		public @interface Value {}

		public static final int type                    	=	Types.NOTIFY_TRACKER;
		public static final int Failed                  	=	Types.NOTIFY_TRACKER_FAILED_FLAG;

		public static final int Enabled                 	=	Types.NOTIFY_TRACKER_ENABLED;
		public static final int Changed                 	=	Types.NOTIFY_TRACKER_CHANGED;
		public static final int Disabled                	=	Types.NOTIFY_TRACKER_DISABLED;
		public static final int EnableFailed            	=	Types.NOTIFY_TRACKER_ENABLE_FAILED;

		public static final int InitSensor              	=	Types.NOTIFY_TRACKER_STATE_INIT_SENSOR;
		public static final int InitSensorFailed        	=	Types.NOTIFY_TRACKER_STATE_INIT_SENSOR_FAILED;
		public static final int Start                   	=	Types.NOTIFY_TRACKER_STATE_START;
		public static final int StartFailed             	=	Types.NOTIFY_TRACKER_STATE_START_FAILED;
		public static final int Stop                    	=	Types.NOTIFY_TRACKER_STATE_STOP;
	}

	@IntDef(flag=true, value={Connection.type, Connection.MainNew, Connection.MainAck, 
			Connection.MainFailed, Connection.MainClosed, Connection.ComDatNew, Connection.ComDatAck, 
			Connection.ComDatFailed, Connection.ComDatClosed, Connection.DataAck, Connection.DataClosed, 
			Connection.Progress, Connection.Established, Connection.EstablishedAck, Connection.Closed, 
			Portal.Disposed, Portal.Zero, Portal.type, 
			Portal.Established, Portal.EstablishedResolution, Portal.Request, Portal.AskRequest, 
			Portal.StreamIncoming, Portal.ImagesIncoming, Portal.IncomingEstablished, Portal.ProvideStreamAck, 
			Portal.ProvideImagesAck, Portal.ProviderReady, Portal.RequestFail, Portal.ProvideFail, 
			Portal.StreamStarted, Portal.StreamPaused, Portal.StreamStopped, Portal.StreamReceiverStarted, 
			Portal.LocationChanged, Portal.SizeChanged, Portal.ContactChanged, Options.type, 
			Options.PortalLocationChanged, Options.PortalSizeChanged, Options.DirectContactChanged, File.type, 
			File.FileProgress, File.SendProgress, File.ReceiveProgress, TouchSource.type, 
			TouchSource.Started, TouchSource.Stopped, TouchSource.NotAvailable, TouchSource.Failed, 
			Environs.type, Environs.Start, Environs.StartInProgress, 
			Environs.StartEnablingWifi, Environs.StartStreamDecoder, Environs.StartInit, Environs.InitFailed, 
			Environs.MethodFailed, Environs.DecoderFailed, Environs.WifiFailed, Environs.StartFailed, 
			Environs.StartInitSuccess, Environs.StartSuccess, Environs.StartListenSuccess, Environs.StartListenDataSuccess, 
			Environs.Stop, Environs.StopBegin, Environs.StopInProgress, Environs.StopFailed, 
			Environs.StopSuccess, Environs.StopReleased, Environs.Socket, Environs.SocketBindFailed, 
			Environs.SocketListenFailed, Environs.SocketFailed, Environs.Settings, Environs.SettingsChanged, 
			Environs.Pairing, Environs.DeviceOnSurface, Environs.DeviceNotOnSurface, Environs.DeviceFlagsUpdate, 
			Mediator.type, Mediator.Server, Mediator.DeviceChanged, 
			Mediator.DeviceAdded, Mediator.DeviceRemoved, Mediator.ServerConnected, Mediator.ServerDisconnected, 
			Mediator.DeviceListUpdateAvailable, Mediator.DeviceListChanged, Mediator.MediatorChanged, Mediator.ServerDeviceChanged, 
			Mediator.ServerDeviceAdded, Mediator.ServerDeviceRemoved, Mediator.ServerSTUNTRegisterRequest, Mediator.ServerPasswordFail, 
			Mediator.ServerPasswordMissing, Network.type, Network.Changed, 
			Tracker.type, Tracker.Failed, Tracker.Enabled, 
			Tracker.Changed, Tracker.Disabled, Tracker.EnableFailed, Tracker.InitSensor, 
			Tracker.InitSensorFailed, Tracker.Start, Tracker.StartFailed, Tracker.Stop, 
	})
	@Retention(RetentionPolicy.SOURCE)
	public @interface Value {}

}

